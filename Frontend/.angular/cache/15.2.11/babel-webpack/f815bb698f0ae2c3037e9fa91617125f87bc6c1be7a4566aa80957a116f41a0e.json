{"ast":null,"code":"import { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let WorkflowService = /*#__PURE__*/(() => {\n  class WorkflowService {\n    constructor(http) {\n      this.http = http;\n    }\n    getAll() {\n      return this.http.get(`${environment.apiUrl}/workflows`);\n    }\n    getById(id) {\n      return this.http.get(`${environment.apiUrl}/workflows/${id}`);\n    }\n    getByEmployeeId(employeeId) {\n      return this.http.get(`${environment.apiUrl}/workflows/employee/${employeeId}`);\n    }\n    getByRequestId(requestId) {\n      return this.http.get(`${environment.apiUrl}/workflows/request/${requestId}`);\n    }\n    create(workflow) {\n      return this.http.post(`${environment.apiUrl}/workflows`, workflow);\n    }\n    update(id, params) {\n      return this.http.put(`${environment.apiUrl}/workflows/${id}`, params);\n    }\n    changeStatus(id, status, comments = '') {\n      return this.http.put(`${environment.apiUrl}/workflows/${id}/status`, {\n        status\n      });\n    }\n    delete(id) {\n      return this.http.delete(`${environment.apiUrl}/workflows/${id}`);\n    }\n    deleteItem(itemId) {\n      return this.http.delete(`${environment.apiUrl}/workflows/items/${itemId}`);\n    }\n  }\n  WorkflowService.ɵfac = function WorkflowService_Factory(t) {\n    return new (t || WorkflowService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  WorkflowService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WorkflowService,\n    factory: WorkflowService.ɵfac,\n    providedIn: 'root'\n  });\n  return WorkflowService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}